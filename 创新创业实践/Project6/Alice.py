import socket
from hashlib import sha256
from Crypto.Util.number import *

buffer_size = 4096

soc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
soc.connect(('127.0.0.1', 12345))

data = soc.recv(buffer_size)
soc.send(b'y')

def issuer_ver(msg, sig):
    msg = bytes_to_long(msg)
    n = 25256765380117692157022599327856268019623258535631250777660573208205682850623828279671517605772017439072513128352973943827662434405500723024529962585080306312334036814574257267663874943614119925737447529679412441140530559804555107975645389789309344392978532775169353835919975195499160946225219387637534253812151229345435033792620931227612345827377214716880737043728193905060125467059648232341161339409533936557952678953177527319857940573368336705755187030584421312234573574503184822937303118710264463448203774492481021861139278426259653961413643054354831844501012402579026737970544791473217230845907671061615110934033
    e = 0x10001
    if pow(sig, e, n) == msg:
        return True
    return False

s = bytes.fromhex(soc.recv(buffer_size).decode())
sig = int(soc.recv(buffer_size))

valid = 2100
year = 2021
low = 21
d1 = valid-(year-low)

for _ in range(d1):
    s = sha256(s).digest()
    
if issuer_ver(s, sig):
    print("Verify successfully!")
else:
    print("Verify failed!")

soc.close()
